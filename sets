#include<set>

void setDemo()
{
  set<int> S; // set maintains ascending order internally
  S.insert(1);
  S.insert(2);
  S.insert(-1);
  S.insert(-10); // can insert in logN time, can also erase in logN time
  
  // vector inserts at the end, which disturbs ordering of vector 
  // have to sort explicitly after using push_back

  for (int x: S)
    cout << x << " ";
    
    cout << endl;
    
    // -10 -1 1 2
    
    auto it = S.find(-1);
    
    auto it = S.find(-1);
    
    // if not present, it will equal S.end()
    
    if (it == S.end())
    {
      cout << "not present\n";
    }
    else
    {
      cout << "present\n";
      cout << *it << endl;
    }
    
    auto it2 = S.upper_bound(-1); // strictly greater than. in sets upper_bound is a method but in vectors it is a function
    auto it3 = S.upper_bound(0);
    cout << *it2 << " " << *it3 << endl; // 1 1
    
    auto it4 = S.upper_bound(2);
    if (it4 == S.end())
    {
      cout << "oops! can't find"\n";
    }
    
    
    
    
  
}
